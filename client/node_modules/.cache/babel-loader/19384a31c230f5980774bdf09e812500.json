{"ast":null,"code":"import _objectSpread from \"/home/srima/github/contact-keeper-mern/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/srima/github/contact-keeper-mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/srima/github/contact-keeper-mern/client/src/components/auth/Login.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from \"mdbreact\";\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const setAlert = alertContext.setAlert;\n  const login = authContext.login,\n        error = authContext.error,\n        clearErrors = authContext.clearErrors,\n        isAuthenticated = authContext.isAuthenticated;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n\n    if (error) {\n      setAlert(error, \"danger\");\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const email = user.email,\n        password = user.password;\n\n  const onChange = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === \"\" || password === \"\") {\n      setAlert(\"Please enter all fields\", \"danger\");\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return React.createElement(MDBRow, {\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"h4 text-center py-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Your email\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    name: \"email\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(MDBInput, {\n    label: \"Your password\",\n    icon: \"lock\",\n    group: true,\n    type: \"password\",\n    name: \"password\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text-center py-4 mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MDBBtn, {\n    color: \"cyan\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Login\")))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/srima/github/contact-keeper-mern/client/src/components/auth/Login.js"],"names":["React","useState","useEffect","useContext","AlertContext","AuthContext","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport {\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n\n    if (error) {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = user;\n\n  const onChange = e => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      setAlert(\"Please enter all fields\", \"danger\");\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return (\n    <MDBRow center>\n      <MDBCol md=\"6\">\n        <MDBCard>\n          <MDBCardBody>\n            <form onSubmit={onSubmit}>\n              <p className=\"h4 text-center py-4\">Login</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Your email\"\n                  icon=\"envelope\"\n                  group\n                  type=\"email\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  name=\"email\"\n                  onChange={onChange}\n                />\n                <MDBInput\n                  label=\"Your password\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn color=\"cyan\" type=\"submit\">\n                  Login\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}